#ifndef SIMDJSON_SRC_SIMDPRUNE_TABLES_CPP
#define SIMDJSON_SRC_SIMDPRUNE_TABLES_CPP

#include <simdjson/implementation_detection.h>

#if SIMDJSON_IMPLEMENTATION_ARM64 || SIMDJSON_IMPLEMENTATION_ICELAKE || SIMDJSON_IMPLEMENTATION_HASWELL || SIMDJSON_IMPLEMENTATION_WESTMERE || SIMDJSON_IMPLEMENTATION_PPC64 || SIMDJSON_IMPLEMENTATION_LSX || SIMDJSON_IMPLEMENTATION_LASX

#include <cstdint>

namespace simdjson { // table modified and copied from
namespace internal { // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetTable
SIMDJSON_DLLIMPORTEXPORT  const unsigned char BitsSetTable256mul2[256] = {
    0,  2,  2,  4,  2,  4,  4,  6,  2,  4,  4,  6,  4,  6,  6,  8,  2,  4,  4,
    6,  4,  6,  6,  8,  4,  6,  6,  8,  6,  8,  8,  10, 2,  4,  4,  6,  4,  6,
    6,  8,  4,  6,  6,  8,  6,  8,  8,  10, 4,  6,  6,  8,  6,  8,  8,  10, 6,
    8,  8,  10, 8,  10, 10, 12, 2,  4,  4,  6,  4,  6,  6,  8,  4,  6,  6,  8,
    6,  8,  8,  10, 4,  6,  6,  8,  6,  8,  8,  10, 6,  8,  8,  10, 8,  10, 10,
    12, 4,  6,  6,  8,  6,  8,  8,  10, 6,  8,  8,  10, 8,  10, 10, 12, 6,  8,
    8,  10, 8,  10, 10, 12, 8,  10, 10, 12, 10, 12, 12, 14, 2,  4,  4,  6,  4,
    6,  6,  8,  4,  6,  6,  8,  6,  8,  8,  10, 4,  6,  6,  8,  6,  8,  8,  10,
    6,  8,  8,  10, 8,  10, 10, 12, 4,  6,  6,  8,  6,  8,  8,  10, 6,  8,  8,
    10, 8,  10, 10, 12, 6,  8,  8,  10, 8,  10, 10, 12, 8,  10, 10, 12, 10, 12,
    12, 14, 4,  6,  6,  8,  6,  8,  8,  10, 6,  8,  8,  10, 8,  10, 10, 12, 6,
    8,  8,  10, 8,  10, 10, 12, 8,  10, 10, 12, 10, 12, 12, 14, 6,  8,  8,  10,
    8,  10, 10, 12, 8,  10, 10, 12, 10, 12, 12, 14, 8,  10, 10, 12, 10, 12, 12,
    14, 10, 12, 12, 14, 12, 14, 14, 16};

SIMDJSON_DLLIMPORTEXPORT  const uint8_t pshufb_combine_table[272] = {
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
    0x0c, 0x0d, 0x0e, 0x0f, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x08,
    0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0x00, 0x01, 0x02, 0x03,
    0x04, 0x05, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff,
    0x00, 0x01, 0x02, 0x03, 0x04, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,
    0x0f, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x03, 0x08, 0x09, 0x0a, 0x0b,
    0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x02, 0x08,
    0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff,
    0x00, 0x01, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x00, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,
    0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x08, 0x09, 0x0a, 0x0b,
    0x0c, 0x0d, 0x0e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
};

// 256 * 8 bytes = 2kB, easily fits in cache.
SIMDJSON_DLLIMPORTEXPORT  const uint64_t thintable_epi8[256] = {
    0x0706050403020100, 0x0007060504030201, 0x0007060504030200,
    0x0000070605040302, 0x0007060504030100, 0x0000070605040301,
    0x0000070605040300, 0x0000000706050403, 0x0007060504020100,
    0x0000070605040201, 0x0000070605040200, 0x0000000706050402,
    0x0000070605040100, 0x0000000706050401, 0x0000000706050400,
    0x0000000007060504, 0x0007060503020100, 0x0000070605030201,
    0x0000070605030200, 0x0000000706050302, 0x0000070605030100,
    0x0000000706050301, 0x0000000706050300, 0x0000000007060503,
    0x0000070605020100, 0x0000000706050201, 0x0000000706050200,
    0x0000000007060502, 0x0000000706050100, 0x0000000007060501,
    0x0000000007060500, 0x0000000000070605, 0x0007060403020100,
    0x0000070604030201, 0x0000070604030200, 0x0000000706040302,
    0x0000070604030100, 0x0000000706040301, 0x0000000706040300,
    0x0000000007060403, 0x0000070604020100, 0x0000000706040201,
    0x0000000706040200, 0x0000000007060402, 0x0000000706040100,
    0x0000000007060401, 0x0000000007060400, 0x0000000000070604,
    0x0000070603020100, 0x0000000706030201, 0x0000000706030200,
    0x0000000007060302, 0x0000000706030100, 0x0000000007060301,
    0x0000000007060300, 0x0000000000070603, 0x0000000706020100,
    0x0000000007060201, 0x0000000007060200, 0x0000000000070602,
    0x0000000007060100, 0x0000000000070601, 0x0000000000070600,
    0x0000000000000706, 0x0007050403020100, 0x0000070504030201,
    0x0000070504030200, 0x0000000705040302, 0x0000070504030100,
    0x0000000705040301, 0x0000000705040300, 0x0000000007050403,
    0x0000070504020100, 0x0000000705040201, 0x0000000705040200,
    0x0000000007050402, 0x0000000705040100, 0x0000000007050401,
    0x0000000007050400, 0x0000000000070504, 0x0000070503020100,
    0x0000000705030201, 0x0000000705030200, 0x0000000007050302,
    0x0000000705030100, 0x0000000007050301, 0x0000000007050300,
    0x0000000000070503, 0x0000000705020100, 0x0000000007050201,
    0x0000000007050200, 0x0000000000070502, 0x0000000007050100,
    0x0000000000070501, 0x0000000000070500, 0x0000000000000705,
    0x0000070403020100, 0x0000000704030201, 0x0000000704030200,
    0x0000000007040302, 0x0000000704030100, 0x0000000007040301,
    0x0000000007040300, 0x0000000000070403, 0x0000000704020100,
    0x0000000007040201, 0x0000000007040200, 0x0000000000070402,
    0x0000000007040100, 0x0000000000070401, 0x0000000000070400,
    0x0000000000000704, 0x0000000703020100, 0x0000000007030201,
    0x0000000007030200, 0x0000000000070302, 0x0000000007030100,
    0x0000000000070301, 0x0000000000070300, 0x0000000000000703,
    0x0000000007020100, 0x0000000000070201, 0x0000000000070200,
    0x0000000000000702, 0x0000000000070100, 0x0000000000000701,
    0x0000000000000700, 0x0000000000000007, 0x0006050403020100,
    0x0000060504030201, 0x0000060504030200, 0x0000000605040302,
    0x0000060504030100, 0x0000000605040301, 0x0000000605040300,
    0x0000000006050403, 0x0000060504020100, 0x0000000605040201,
    0x0000000605040200, 0x0000000006050402, 0x0000000605040100,
    0x0000000006050401, 0x0000000006050400, 0x0000000000060504,
    0x0000060503020100, 0x0000000605030201, 0x0000000605030200,
    0x0000000006050302, 0x0000000605030100, 0x0000000006050301,
    0x0000000006050300, 0x0000000000060503, 0x0000000605020100,
    0x0000000006050201, 0x0000000006050200, 0x0000000000060502,
    0x0000000006050100, 0x0000000000060501, 0x0000000000060500,
    0x0000000000000605, 0x0000060403020100, 0x0000000604030201,
    0x0000000604030200, 0x0000000006040302, 0x0000000604030100,
    0x0000000006040301, 0x0000000006040300, 0x0000000000060403,
    0x0000000604020100, 0x0000000006040201, 0x0000000006040200,
    0x0000000000060402, 0x0000000006040100, 0x0000000000060401,
    0x0000000000060400, 0x0000000000000604, 0x0000000603020100,
    0x0000000006030201, 0x0000000006030200, 0x0000000000060302,
    0x0000000006030100, 0x0000000000060301, 0x0000000000060300,
    0x0000000000000603, 0x0000000006020100, 0x0000000000060201,
    0x0000000000060200, 0x0000000000000602, 0x0000000000060100,
    0x0000000000000601, 0x0000000000000600, 0x0000000000000006,
    0x0000050403020100, 0x0000000504030201, 0x0000000504030200,
    0x0000000005040302, 0x0000000504030100, 0x0000000005040301,
    0x0000000005040300, 0x0000000000050403, 0x0000000504020100,
    0x0000000005040201, 0x0000000005040200, 0x0000000000050402,
    0x0000000005040100, 0x0000000000050401, 0x0000000000050400,
    0x0000000000000504, 0x0000000503020100, 0x0000000005030201,
    0x0000000005030200, 0x0000000000050302, 0x0000000005030100,
    0x0000000000050301, 0x0000000000050300, 0x0000000000000503,
    0x0000000005020100, 0x0000000000050201, 0x0000000000050200,
    0x0000000000000502, 0x0000000000050100, 0x0000000000000501,
    0x0000000000000500, 0x0000000000000005, 0x0000000403020100,
    0x0000000004030201, 0x0000000004030200, 0x0000000000040302,
    0x0000000004030100, 0x0000000000040301, 0x0000000000040300,
    0x0000000000000403, 0x0000000004020100, 0x0000000000040201,
    0x0000000000040200, 0x0000000000000402, 0x0000000000040100,
    0x0000000000000401, 0x0000000000000400, 0x0000000000000004,
    0x0000000003020100, 0x0000000000030201, 0x0000000000030200,
    0x0000000000000302, 0x0000000000030100, 0x0000000000000301,
    0x0000000000000300, 0x0000000000000003, 0x0000000000020100,
    0x0000000000000201, 0x0000000000000200, 0x0000000000000002,
    0x0000000000000100, 0x0000000000000001, 0x0000000000000000,
    0x0000000000000000,
}; //static uint64_t thintable_epi8[256]

// 256 * 8 bytes = 2kB, easily fits in cache.
SIMDJSON_DLLIMPORTEXPORT  const uint64_t interleaved_thintable_epi8[256] = {
    0xffffffffffffffff, 0xffffffffffffff00, 0xffffffffffffff10,
    0xffffffffffff1000, 0xffffffffffffff20, 0xffffffffffff2000,
    0xffffffffffff2010, 0xffffffffff201000, 0xffffffffffffff30,
    0xffffffffffff3000, 0xffffffffffff3010, 0xffffffffff301000,
    0xffffffffffff3020, 0xffffffffff302000, 0xffffffffff302010,
    0xffffffff30201000, 0xffffffffffffff01, 0xffffffffffff0100,
    0xffffffffffff0110, 0xffffffffff011000, 0xffffffffffff0120,
    0xffffffffff012000, 0xffffffffff012010, 0xffffffff01201000,
    0xffffffffffff0130, 0xffffffffff013000, 0xffffffffff013010,
    0xffffffff01301000, 0xffffffffff013020, 0xffffffff01302000,
    0xffffffff01302010, 0xffffff0130201000, 0xffffffffffffff11,
    0xffffffffffff1100, 0xffffffffffff1110, 0xffffffffff111000,
    0xffffffffffff1120, 0xffffffffff112000, 0xffffffffff112010,
    0xffffffff11201000, 0xffffffffffff1130, 0xffffffffff113000,
    0xffffffffff113010, 0xffffffff11301000, 0xffffffffff113020,
    0xffffffff11302000, 0xffffffff11302010, 0xffffff1130201000,
    0xffffffffffff1101, 0xffffffffff110100, 0xffffffffff110110,
    0xffffffff11011000, 0xffffffffff110120, 0xffffffff11012000,
    0xffffffff11012010, 0xffffff1101201000, 0xffffffffff110130,
    0xffffffff11013000, 0xffffffff11013010, 0xffffff1101301000,
    0xffffffff11013020, 0xffffff1101302000, 0xffffff1101302010,
    0xffff110130201000, 0xffffffffffffff21, 0xffffffffffff2100,
    0xffffffffffff2110, 0xffffffffff211000, 0xffffffffffff2120,
    0xffffffffff212000, 0xffffffffff212010, 0xffffffff21201000,
    0xffffffffffff2130, 0xffffffffff213000, 0xffffffffff213010,
    0xffffffff21301000, 0xffffffffff213020, 0xffffffff21302000,
    0xffffffff21302010, 0xffffff2130201000, 0xffffffffffff2101,
    0xffffffffff210100, 0xffffffffff210110, 0xffffffff21011000,
    0xffffffffff210120, 0xffffffff21012000, 0xffffffff21012010,
    0xffffff2101201000, 0xffffffffff210130, 0xffffffff21013000,
    0xffffffff21013010, 0xffffff2101301000, 0xffffffff21013020,
    0xffffff2101302000, 0xffffff2101302010, 0xffff210130201000,
    0xffffffffffff2111, 0xffffffffff211100, 0xffffffffff211110,
    0xffffffff21111000, 0xffffffffff211120, 0xffffffff21112000,
    0xffffffff21112010, 0xffffff2111201000, 0xffffffffff211130,
    0xffffffff21113000, 0xffffffff21113010, 0xffffff2111301000,
    0xffffffff21113020, 0xffffff2111302000, 0xffffff2111302010,
    0xffff211130201000, 0xffffffffff211101, 0xffffffff21110100,
    0xffffffff21110110, 0xffffff2111011000, 0xffffffff21110120,
    0xffffff2111012000, 0xffffff2111012010, 0xffff211101201000,
    0xffffffff21110130, 0xffffff2111013000, 0xffffff2111013010,
    0xffff211101301000, 0xffffff2111013020, 0xffff211101302000,
    0xffff211101302010, 0xff21110130201000, 0xffffffffffffff31,
    0xffffffffffff3100, 0xffffffffffff3110, 0xffffffffff311000,
    0xffffffffffff3120, 0xffffffffff312000, 0xffffffffff312010,
    0xffffffff31201000, 0xffffffffffff3130, 0xffffffffff313000,
    0xffffffffff313010, 0xffffffff31301000, 0xffffffffff313020,
    0xffffffff31302000, 0xffffffff31302010, 0xffffff3130201000,
    0xffffffffffff3101, 0xffffffffff310100, 0xffffffffff310110,
    0xffffffff31011000, 0xffffffffff310120, 0xffffffff31012000,
    0xffffffff31012010, 0xffffff3101201000, 0xffffffffff310130,
    0xffffffff31013000, 0xffffffff31013010, 0xffffff3101301000,
    0xffffffff31013020, 0xffffff3101302000, 0xffffff3101302010,
    0xffff310130201000, 0xffffffffffff3111, 0xffffffffff311100,
    0xffffffffff311110, 0xffffffff31111000, 0xffffffffff311120,
    0xffffffff31112000, 0xffffffff31112010, 0xffffff3111201000,
    0xffffffffff311130, 0xffffffff31113000, 0xffffffff31113010,
    0xffffff3111301000, 0xffffffff31113020, 0xffffff3111302000,
    0xffffff3111302010, 0xffff311130201000, 0xffffffffff311101,
    0xffffffff31110100, 0xffffffff31110110, 0xffffff3111011000,
    0xffffffff31110120, 0xffffff3111012000, 0xffffff3111012010,
    0xffff311101201000, 0xffffffff31110130, 0xffffff3111013000,
    0xffffff3111013010, 0xffff311101301000, 0xffffff3111013020,
    0xffff311101302000, 0xffff311101302010, 0xff31110130201000,
    0xffffffffffff3121, 0xffffffffff312100, 0xffffffffff312110,
    0xffffffff31211000, 0xffffffffff312120, 0xffffffff31212000,
    0xffffffff31212010, 0xffffff3121201000, 0xffffffffff312130,
    0xffffffff31213000, 0xffffffff31213010, 0xffffff3121301000,
    0xffffffff31213020, 0xffffff3121302000, 0xffffff3121302010,
    0xffff312130201000, 0xffffffffff312101, 0xffffffff31210100,
    0xffffffff31210110, 0xffffff3121011000, 0xffffffff31210120,
    0xffffff3121012000, 0xffffff3121012010, 0xffff312101201000,
    0xffffffff31210130, 0xffffff3121013000, 0xffffff3121013010,
    0xffff312101301000, 0xffffff3121013020, 0xffff312101302000,
    0xffff312101302010, 0xff31210130201000, 0xffffffffff312111,
    0xffffffff31211100, 0xffffffff31211110, 0xffffff3121111000,
    0xffffffff31211120, 0xffffff3121112000, 0xffffff3121112010,
    0xffff312111201000, 0xffffffff31211130, 0xffffff3121113000,
    0xffffff3121113010, 0xffff312111301000, 0xffffff3121113020,
    0xffff312111302000, 0xffff312111302010, 0xff31211130201000,
    0xffffffff31211101, 0xffffff3121110100, 0xffffff3121110110,
    0xffff312111011000, 0xffffff3121110120, 0xffff312111012000,
    0xffff312111012010, 0xff31211101201000, 0xffffff3121110130,
    0xffff312111013000, 0xffff312111013010, 0xff31211101301000,
    0xffff312111013020, 0xff31211101302000, 0xff31211101302010,
    0x3121110130201000,
}; //static uint64_t interleaved_thintable_epi8[256]

} // namespace internal
} // namespace simdjson

#endif //  SIMDJSON_IMPLEMENTATION_ARM64 || SIMDJSON_IMPLEMENTATION_ICELAKE || SIMDJSON_IMPLEMENTATION_HASWELL || SIMDJSON_IMPLEMENTATION_WESTMERE || SIMDJSON_IMPLEMENTATION_PPC64 || SIMDJSON_IMPLEMENTATION_LSX || SIMDJSON_IMPLEMENTATION_LASX

#endif // SIMDJSON_SRC_SIMDPRUNE_TABLES_CPP
